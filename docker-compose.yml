version: "3.8"

services:
  app1:
    build:
      context: .
      dockerfile: app/Dockerfile
    environment:
      - DB_HOST=mysql
      - DB_USER=appuser
      - DB_PASSWORD=apppassword
      - DB_NAME=ecommerce_db
      - DB_PORT=3306
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-net

  app2:
    build:
      context: .
      dockerfile: app/Dockerfile
    environment:
      - DB_HOST=mysql
      - DB_USER=appuser
      - DB_PASSWORD=apppassword
      - DB_NAME=ecommerce_db
      - DB_PORT=3306
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-net

  app3:
    build:
      context: .
      dockerfile: app/Dockerfile
    environment:
      - DB_HOST=mysql
      - DB_USER=appuser
      - DB_PASSWORD=apppassword
      - DB_NAME=ecommerce_db
      - DB_PORT=3306
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-net

  nginx:
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:z
    depends_on:
      - app1
      - app2
      - app3
    networks:
      - app-net
      
  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=ecommerce_db
      - MYSQL_USER=appuser
      - MYSQL_PASSWORD=apppassword
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/scripts:/docker-entrypoint-initdb.d
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  mysql_data:
